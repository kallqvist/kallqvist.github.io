{"version":3,"file":"static/js/372.2ddefcd5.chunk.js","mappings":"4NAiFA,MAzEA,WACE,OAAoCA,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAA4BF,EAAAA,EAAAA,UAAkB,CAAC,EAAG,IAAG,eAA9CG,EAAM,KAAEC,EAAS,KACxB,GAAoCJ,EAAAA,EAAAA,UAAkB,CAAC,EAAG,IAAG,eAAtDK,EAAU,KAAEC,EAAa,MAEhCC,EAAAA,EAAAA,YAAU,WACRD,EAAc,CACZE,IAAAA,OAASL,EAAO,GAAKM,OAAOC,WAAa,GAAKD,OAAOC,WAAY,EAAG,GACpEF,IAAAA,OAASL,EAAO,GAAKM,OAAOE,YAAc,GAAKF,OAAOE,YAAa,EAAG,IAE1E,GAAG,CAACR,IAEJ,OAAqBS,EAAAA,EAAAA,YAAU,WAC7B,IAAMC,EAAIL,IAAAA,OAASL,EAAO,GAAKM,OAAOC,WAAa,GAAKD,OAAOC,WAAY,EAAG,GACxEI,EAAIN,IAAAA,OAASL,EAAO,GAAKM,OAAOE,YAAc,GAAKF,OAAOE,YAAa,EAAG,GAE1EI,EAAS,EADK,EACDC,KAAKC,IAAIJ,EAAI,IAE1BK,EAAoB,IAAT,EAAJL,EAAQ,IADJ,EAAJC,EAAQ,GAErB,MAAO,CACLK,UAAU,eAAD,OAAiBhB,EAAO,GAAE,eAAOA,EAAO,GAAE,oCAA4Be,EAAG,wBAAgBH,EAAK,aAAKA,EAAK,aAAKA,EAAK,KAC3HK,OAAQnB,EAAa,WAAa,OAGtC,GAAG,CAACA,EAAYE,IAZTkB,GAYiB,YAZP,GAcjB,GAA2BT,EAAAA,EAAAA,YAAU,WACnC,IAAMC,EAAoC,EAAhCG,KAAKC,IAAIZ,EAAW,GAAK,IACnC,MAAO,CACLiB,OAAO,aAAD,OAAe,EAAI,GAAFT,EAAK,sBAAc,GAAM,GAAMA,EAAC,kBAAoB,GAAT,EAAIA,GAAM,OAC5EU,gBAAiB,2EAErB,GAAG,CAAClB,IAEJ,IAFgB,YANO,IAQEO,EAAAA,EAAAA,YAAU,WACjC,IAAMC,EAAIG,KAAKQ,IAAI,EAAoB,EAAhBnB,EAAW,GAAQ,GACpCS,EAAIT,EAAW,GACrB,MAAO,CACLoB,QAASZ,EACTa,WAAW,kCAAD,OAAsC,IAAFZ,EAAK,kCAEvD,GAAG,CAACT,KAPGsB,GAOS,YAPK,GASrB,GAA0Bf,EAAAA,EAAAA,YAAU,WAClC,IAAMC,EAAIG,KAAKQ,IAAoB,EAAhBnB,EAAW,GAAS,EAAG,GACpCS,EAAIT,EAAW,GACrB,MAAO,CACLoB,QAASZ,EACTa,WAAW,kCAAD,OAAsC,IAAFZ,EAAK,kCAEvD,GAAG,CAACT,IAPGuB,GAOS,YAPM,GAShBC,GAAeC,EAAAA,EAAAA,YAAW,CAC9BC,YAAa,kBAAM7B,GAAc,EAAK,EACtC8B,OAAQ,SAAAC,GAAC,OAAI7B,EAAU6B,EAAEC,SAAS,EAClCC,UAAW,WACTjC,GAAc,GACdE,EAAU,CAAC,EAAG,GAChB,IAGF,OACE,iBAAKgC,UAAU,aAAY,WAEzB,SAAC,EAAAC,SAAA,IAAY,CAACD,UAAU,YAAYE,MAAOX,KAC3C,SAAC,EAAAU,SAAA,IAAY,CAACD,UAAU,aAAaE,MAAOV,KAC5C,SAAC,EAAAS,SAAA,KAAY,gBAACD,UAAU,QAAWP,KAAc,IAAES,MAAOjB,EAAW,UACnE,gBAAKe,UAAU,IAAG,oBAI1B,C","sources":["routes/home/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { useGesture, Vector2 } from '@use-gesture/react';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport './style.css';\r\n\r\n\r\n\r\nfunction RouteHome() {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [offset, setOffset] = useState<Vector2>([0, 0]);\r\n  const [offsetNorm, setOffsetNorm] = useState<Vector2>([0, 0]);\r\n\r\n  useEffect(() => {\r\n    setOffsetNorm([\r\n      _.clamp((offset[0] + window.innerWidth / 2) / window.innerWidth, 0, 1),\r\n      _.clamp((offset[1] + window.innerHeight / 2) / window.innerHeight, 0, 1),\r\n    ]);\r\n  }, [offset]);\r\n  \r\n  const [logoStyles] = useSpring(() => {\r\n    const x = _.clamp((offset[0] + window.innerWidth / 2) / window.innerWidth, 0, 1);\r\n    const y = _.clamp((offset[1] + window.innerHeight / 2) / window.innerHeight, 0, 1);\r\n    const scaleFactor = 1;\r\n    const scale = (1 + Math.abs(x - 0.5) * scaleFactor);\r\n    const dir = (y * 2 - 1);\r\n    const rot = (x * 2 - 1) * 30 * dir;\r\n    return {\r\n      transform: `translate3d(${offset[0]}px, ${offset[1]}px, 0) rotate3d(0, 0, 1, ${rot}deg) scale3d(${scale}, ${scale}, ${scale})`,\r\n      cursor: isDragging ? 'grabbing' : 'grab',\r\n      // filter: `grayscale(${scale})`\r\n    }\r\n  }, [isDragging, offset]);\r\n\r\n  const [backgroundStyles] = useSpring(() => {\r\n    const x = Math.abs(offsetNorm[0] - 0.5) * 2;\r\n    return {\r\n      filter: `grayscale(${1-x*0.6}) contrast(${0.2 + 0.8 * x}) blur(${(1 - x) * 4}px)`,\r\n      backgroundImage: 'url(https://upload.wikimedia.org/wikipedia/commons/b/be/Deep_forest.jpg)',\r\n    };\r\n  }, [offsetNorm]);\r\n\r\n  const [glowLeftStyles] = useSpring(() => {\r\n    const x = Math.max(1 - offsetNorm[0] * 2, 0);\r\n    const y = offsetNorm[1];\r\n    return {\r\n      opacity: x,\r\n      background: `radial-gradient(circle at -50% ${y*100}%, maroon 0%, transparent 60%)`,\r\n    }\r\n  }, [offsetNorm])\r\n\r\n  const [glowRightStyles] = useSpring(() => {\r\n    const x = Math.max(offsetNorm[0] * 2 - 1, 0);\r\n    const y = offsetNorm[1];\r\n    return {\r\n      opacity: x,\r\n      background: `radial-gradient(circle at 150% ${y*100}%, maroon 0%, transparent 60%)`,\r\n    }\r\n  }, [offsetNorm])\r\n\r\n  const bindGestures = useGesture({\r\n    onDragStart: () => setIsDragging(true),\r\n    onDrag: e => setOffset(e.movement),\r\n    onDragEnd: () => {\r\n      setIsDragging(false);\r\n      setOffset([0, 0]);\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div className='route home'>\r\n      {/* <animated.div className='background' style={backgroundStyles} /> */}\r\n      <animated.div className='glow left' style={glowLeftStyles} />\r\n      <animated.div className='glow right' style={glowRightStyles} />\r\n      <animated.div className='logo' {...bindGestures()} style={logoStyles}>\r\n        <div className='k'>K</div>\r\n      </animated.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouteHome;\r\n"],"names":["useState","isDragging","setIsDragging","offset","setOffset","offsetNorm","setOffsetNorm","useEffect","_","window","innerWidth","innerHeight","useSpring","x","y","scale","Math","abs","rot","transform","cursor","logoStyles","filter","backgroundImage","max","opacity","background","glowLeftStyles","glowRightStyles","bindGestures","useGesture","onDragStart","onDrag","e","movement","onDragEnd","className","animated","style"],"sourceRoot":""}