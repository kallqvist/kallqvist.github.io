{"version":3,"file":"static/js/756.0ca07704.chunk.js","mappings":"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","sources":["components/deck/table/index.tsx","components/deck/utils/math.ts","components/deck/card/index.tsx","components/deck/pile/index.tsx","routes/cards/index.tsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport { DndContext, DragStartEvent, DragEndEvent, DragOverlay } from '@dnd-kit/core';\r\nimport * as Y from 'yjs';\r\nimport * as awarenessProtocol from \"y-protocols/awareness\";\r\nimport { WebrtcProvider } from \"y-webrtc\";\r\nimport './style.css';\r\n\r\n\r\n\r\nexport interface ITableProps\r\n{\r\n    children?: React.ReactNode,\r\n    style?: React.CSSProperties,\r\n}\r\n\r\nexport function Table(props:ITableProps)\r\n{\r\n    const {\r\n        children,\r\n        style,\r\n    } = props;\r\n\r\n    const yjsRef = useRef<Y.Doc>(new Y.Doc());\r\n    const yjsAwarenessRef = useRef<awarenessProtocol.Awareness>();\r\n\r\n    useEffect(() => {\r\n        let playerName:string | null = 'some guy';\r\n        // while (!playerName)\r\n        // {\r\n        //     playerName = prompt(\"What's your name?\");\r\n        // }\r\n        const roomConf = {\r\n            name: 'my room',\r\n            password: 'abc',\r\n            playerName,\r\n        };\r\n        const ydoc = yjsRef.current;\r\n        const wrtcOpts = {\r\n            // TODO: self-host?\r\n            signaling: [\r\n                // 'wss://signaling.yjs.dev',\r\n                // 'wss://y-webrtc-signaling-eu.herokuapp.com',\r\n                // 'wss://y-webrtc-signaling-us.herokuapp.com',\r\n            ],\r\n            ...(roomConf.password ? { password: roomConf.password } : undefined),\r\n        };\r\n        const provider = new WebrtcProvider(\r\n            roomConf.name,\r\n            ydoc,\r\n            // @ts-ignore\r\n            wrtcOpts,\r\n        );\r\n        provider.awareness.on('update', handleOnAwarenessChange);\r\n        const userState = {\r\n            'name': roomConf.playerName,\r\n        };\r\n        provider.awareness.setLocalState(userState);\r\n        yjsAwarenessRef.current = provider.awareness;\r\n        return () => {\r\n            provider.destroy();\r\n        }\r\n    }, []);\r\n\r\n    function handleOnAwarenessChange()\r\n    {\r\n        // console.log('awareness', yjsAwarenessRef.current?.getStates());\r\n        // const res = {} as IUserStateMap;\r\n        // yjsAwarenessRef.current?.getStates().forEach(\r\n        //     (u, uid) => {\r\n        //         if (!u.position) return;\r\n        //         res[uid] = {\r\n        //             ...u,\r\n        //             position: [\r\n        //                 window.innerWidth / 2 + u.position[0],\r\n        //                 window.innerHeight / 2 + u.position[1],\r\n        //                 // u.position[1],\r\n        //             ],\r\n        //         } as IUserState;\r\n        //     }\r\n        // );\r\n        // setUsers(res);\r\n    }\r\n\r\n    function handleOnDragStart(e:DragStartEvent)\r\n    {\r\n        console.log('drag start', e);\r\n    }\r\n\r\n    function handleOnDragEnd(e:DragEndEvent)\r\n    {\r\n        // console.log('drag end', e);\r\n    }\r\n\r\n    return <div className='table' style={style}>\r\n        <DndContext\r\n            onDragStart={handleOnDragStart}\r\n            onDragEnd={handleOnDragEnd}\r\n        >\r\n            {children}\r\n            {/* <DragOverlay>\r\n                overlay\r\n            </DragOverlay> */}\r\n        </DndContext>\r\n    </div>\r\n}","import _ from \"lodash\";\r\n\r\n// 4 digit seed\r\nfunction cyrb128(str:string) : [number, number, number, number] {\r\n    let h1 = 1779033703, h2 = 3144134277,\r\n        h3 = 1013904242, h4 = 2773480762;\r\n    for (let i = 0, k; i < str.length; i++) {\r\n        k = str.charCodeAt(i);\r\n        h1 = h2 ^ Math.imul(h1 ^ k, 597399067);\r\n        h2 = h3 ^ Math.imul(h2 ^ k, 2869860233);\r\n        h3 = h4 ^ Math.imul(h3 ^ k, 951274213);\r\n        h4 = h1 ^ Math.imul(h4 ^ k, 2716044179);\r\n    }\r\n    h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067);\r\n    h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233);\r\n    h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213);\r\n    h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179);\r\n    return [(h1^h2^h3^h4)>>>0, (h2^h1)>>>0, (h3^h1)>>>0, (h4^h1)>>>0];\r\n}\r\n\r\n// prng with seed\r\nfunction sfc32(a:number, b:number, c:number, d:number) {\r\n    return function() {\r\n        a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;\r\n        var t = (a + b) | 0;\r\n        a = b ^ b >>> 9;\r\n        b = c + (c << 3) | 0;\r\n        c = (c << 21 | c >>> 11);\r\n        d = d + 1 | 0;\r\n        t = t + d | 0;\r\n        c = c + t | 0;\r\n        return (t >>> 0) / 4294967296;\r\n    }\r\n}\r\n\r\nexport function detRandomSeries(n=3, seed='seed')\r\n{\r\n    const s = cyrb128(seed);\r\n    const r = sfc32(...s);\r\n    return _.map(_.range(0, n), () => r());\r\n}\r\n\r\n// export function det_random_index(n=0, seed='seed')\r\n// {\r\n//     const s = det_random_series(n+1);\r\n//     return s[n];\r\n// }\r\n","import { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { useDraggable } from '@dnd-kit/core';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport interface ICardProps\r\n{\r\n    id: string,\r\n    children?: React.ReactNode,\r\n    offset?: [number, number],\r\n    rotation?: number,\r\n    style?: React.CSSProperties,\r\n}\r\n\r\nexport function Card(props:ICardProps)\r\n{\r\n    const {\r\n        id,\r\n        children,\r\n        offset,\r\n        rotation,\r\n        style,\r\n    } = props;\r\n\r\n    const dragScale = 1.1;\r\n    \r\n    const {\r\n        isDragging,\r\n        attributes,\r\n        listeners,\r\n        transform,\r\n        setNodeRef,\r\n    } = useDraggable({id, data: props});\r\n\r\n    const [isMoving, setIsMoving] = useState(false);\r\n\r\n    const [wrapAnimProps] = useSpring(() => {\r\n        // const t = transform ? `translate3d(${transform.x}px, ${transform.y}px, 0px)` : `translate3d(0px, 0px, 0px)`;\r\n        const [ox, oy] = offset || [0, 0];\r\n        const t = (\r\n            _.chain([\r\n                transform ? `translate3d(${transform.x + ox}px, ${transform.y + oy}px, 0px)` : `translate3d(${ox}px, ${oy}px, 0px)`,\r\n                isDragging ? `scaleX(${dragScale}) scaleY(${dragScale})` : 'scaleX(1) scaleY(1)',\r\n                _.isNumber(rotation) ? `rotate(${rotation}deg)` : 'rotate(0deg)',\r\n            ])\r\n            .compact()\r\n            .join(' ')\r\n            .value()\r\n        );\r\n        return {\r\n            config: { mass: 2, tension: 600, friction: 50 },\r\n            transform: t,\r\n            onStart: () => setIsMoving(true),\r\n            onRest: () => setIsMoving(false),\r\n        };\r\n    }, [transform, isDragging, offset, rotation]);\r\n    \r\n    const classNames = (\r\n        _.chain([\r\n            'card',\r\n            isDragging || isMoving ? 'dragging' : undefined,\r\n        ])\r\n        .compact()\r\n        .join(' ')\r\n        .value()\r\n    );\r\n\r\n    return <animated.div\r\n        ref={setNodeRef}\r\n        className={classNames}\r\n        style={style ? {\r\n            ...wrapAnimProps,\r\n            ...style,\r\n        } : wrapAnimProps}\r\n        {...listeners}\r\n        {...attributes}\r\n    >\r\n        <div className='back' />\r\n        <div className='front'>\r\n            {children}\r\n        </div>\r\n    </animated.div>\r\n}","import { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { useDroppable } from '@dnd-kit/core';\r\nimport { detRandomSeries } from '../utils/math';\r\nimport { Card, ICardProps } from '../card';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport interface IPileProps\r\n{\r\n    id: string,\r\n    cards?: ICardProps[],\r\n    cardOffset?: [number, number],\r\n    cardMess?: number,\r\n    style?: React.CSSProperties,\r\n}\r\n\r\nexport function Pile(props:IPileProps)\r\n{\r\n    const {\r\n        id,\r\n        cards,\r\n        cardOffset,\r\n        cardMess,\r\n        style,\r\n    } = props;\r\n\r\n    const _defaultCardOffset = [0, 20];\r\n    const _defaultCardMess = 10;\r\n\r\n    const {isOver, rect, setNodeRef} = useDroppable({id});\r\n    const [offsets, setOffsets] = useState<[number, number][]>([]);\r\n    const [rotations, setRotations] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n        const _rotations = _.map(\r\n            detRandomSeries(cards?.length || 0, id),\r\n            v => (v * 2 - 1) * (cardMess || _defaultCardMess),\r\n        );\r\n        setRotations(_rotations);\r\n\r\n        const _offsets = (\r\n            _.chain(cards)\r\n            .map((card, i) => {\r\n                const o:[number, number] = (\r\n                    _.chain<[number, number] | undefined>([\r\n                        card.offset,\r\n                        cardOffset !== undefined ? (\r\n                            [\r\n                                cardOffset[0] * i,\r\n                                cardOffset[1] * i,\r\n                            ]\r\n                        ) : undefined,\r\n                        [\r\n                            _defaultCardOffset[0] * i,\r\n                            _defaultCardOffset[1] * i,\r\n                        ],\r\n                    ])\r\n                    .compact()\r\n                    .first()\r\n                    .value()\r\n                ) as [number, number];\r\n                return o;\r\n            })\r\n            .value()\r\n        );\r\n        setOffsets(_offsets);\r\n    }, [id, cards, cardOffset, cardMess]);\r\n\r\n    const classNames = (\r\n        _.chain([\r\n            'pile',\r\n            isOver ? 'active' : undefined,\r\n        ])\r\n        .compact()\r\n        .join(' ')\r\n        .value()\r\n    );\r\n\r\n    return <>\r\n        <div ref={setNodeRef} className={classNames} style={style}>\r\n            {/* <div style={{\r\n                whiteSpace: 'pre',\r\n                fontSize: '0.8em',\r\n            }}>{JSON.stringify(rect.current, undefined, 2)}</div> */}\r\n\r\n            {cards ? cards.map((card, i) => {\r\n                const o:[number, number]  = offsets[i] || [0, 0];\r\n                const r:number = card.rotation || _.get(rotations, i) || 0;\r\n                return (\r\n                    <Card\r\n                        key={card.id}\r\n                        {...card}\r\n                        offset={o}\r\n                        rotation={r}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '1em',\r\n                            left: '1em',\r\n                            // top: rect.current?.top || 0,\r\n                            // left: rect.current?.left || 0,\r\n                        }}\r\n                    />\r\n                );\r\n            }) : null}\r\n        </div>\r\n    </>;\r\n}","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Table, Pile, Card } from '../../components/deck';\r\nimport './style.css';\r\n\r\n\r\n\r\nexport function RouteDeck()\r\n{\r\n\tconst location = useLocation();\r\n\t\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('location', location);\r\n\t// }, [location]);\r\n\r\n\treturn <div className='route deck'>\r\n\t\t<Table style={{\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tgap: '0.5em',\r\n\t\t\taspectRatio: '16/9',\r\n\t\t\twidth: 'auto',\r\n\t\t\theight: '100%',\r\n\t\t\tmaxWidth: '100%',\r\n\t\t\tjustifyContent: 'space-evenly',\r\n\t\t\talignItems: 'center',\r\n\t\t\t// border: '1px solid white',\r\n\t\t}}>\r\n\t\t\t<Pile id='pile-1' cards={[\r\n\t\t\t\t{id: 'card-3', children: 'C'},\r\n\t\t\t\t{id: 'card-4', children: 'D'},\r\n\t\t\t\t{id: 'card-5', children: 'E'},\r\n\t\t\t\t{id: 'card-6', children: 'F'},\r\n\t\t\t]} />\r\n\t\t\t{/* <Card id='card-1'>A</Card> */}\r\n\t\t\t<Pile id='pile-2' cards={[\r\n\t\t\t\t{id: 'card-7', children: 'G'},\r\n\t\t\t]} />\r\n\t\t\t{/* <Card id='card-2'>B</Card> */}\r\n\t\t\t<Pile id='pile-3' />\r\n\t\t</Table>\r\n\t</div>\r\n}\r\n\r\nexport default RouteDeck;"],"names":["Table","props","children","style","yjsRef","useRef","Y","yjsAwarenessRef","handleOnAwarenessChange","useEffect","roomConf","ydoc","current","wrtcOpts","signaling","password","undefined","provider","WebrtcProvider","awareness","on","userState","setLocalState","destroy","className","onDragStart","e","console","log","onDragEnd","cyrb128","str","k","h1","h2","h3","h4","i","length","charCodeAt","Math","imul","sfc32","a","b","c","d","t","Card","id","offset","rotation","useDraggable","data","isDragging","attributes","listeners","transform","setNodeRef","useState","isMoving","setIsMoving","useSpring","ox","oy","config","mass","tension","friction","_","x","y","compact","join","value","onStart","onRest","wrapAnimProps","classNames","animated","ref","Pile","cards","cardOffset","cardMess","_defaultCardOffset","useDroppable","isOver","rect","offsets","setOffsets","rotations","setRotations","_rotations","n","s","r","detRandomSeries","v","_offsets","map","card","first","o","position","top","left","RouteDeck","useLocation","display","gap","aspectRatio","width","height","maxWidth","justifyContent","alignItems"],"sourceRoot":""}